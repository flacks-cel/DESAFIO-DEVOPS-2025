user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for" '
                     'cache_status=$upstream_cache_status';

    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;

    # Configuração da zona de cache
    proxy_cache_path /var/cache/nginx/app1_cache levels=1:2 keys_zone=app1_cache:10m max_size=100m inactive=10s;
    proxy_cache_path /var/cache/nginx/app2_cache levels=1:2 keys_zone=app2_cache:10m max_size=100m inactive=60s;

    server {
        listen 80;
        server_name localhost;

        # Métricas do Nginx
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }

        # Roteamento para App 1 (Python) - Cache de 10 segundos
        location /app1/ {
            proxy_pass http://app1:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # Configuração de cache
            proxy_cache app1_cache;
            proxy_cache_valid 200 10s;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            
            # Adiciona cabeçalho para identificar hits/misses no cache
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Roteamento para App 2 (Node.js) - Cache de 60 segundos
        location /app2/ {
            proxy_pass http://app2:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # Configuração de cache
            proxy_cache app2_cache;
            proxy_cache_valid 200 60s;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            
            # Adiciona cabeçalho para identificar hits/misses no cache
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Roteamento para Prometheus
        location /prometheus/ {
            proxy_pass http://prometheus:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Roteamento para Grafana
        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}